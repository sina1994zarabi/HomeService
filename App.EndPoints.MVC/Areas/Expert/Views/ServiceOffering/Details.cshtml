@using App.Domain.Core.Enums;
@using FrameWork;
@using App.Domain.Core.Entities.Services;
@model ServiceOffering

@{
    Layout = "_Layout";
    ViewData["Title"] = "جزئیات پیشنهاد";
}

<div class="container py-5">
    <div class="card offer-detail-card shadow-lg">
        <!-- Card Header with Gradient Background -->
        <div class="card-header bg-gradient text-white text-center py-4">
            <h2 class="mb-0">جزئیات پیشنهاد</h2>
        </div>

        <div class="card-body">
            <!-- Image Carousel Section -->
            <div class="mb-4">
                @if (Model.ServiceRequest.Images != null && Model.ServiceRequest.Images.Any())
                {
                    <div id="imageCarousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @for (int i = 0; i < Model.ServiceRequest.Images.Count; i++)
                            {
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <img src="@Model.ServiceRequest.Images[i]" class="d-block w-100 carousel-img" alt="تصویر پیشنهاد">
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#imageCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">قبلی</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#imageCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">بعدی</span>
                        </button>
                    </div>
                }
                else
                {
                    <div class="text-center text-muted">تصویری موجود نیست.</div>
                }
            </div>

            <!-- Two-Column Layout for Details -->
            <div class="row">
                <!-- Left Column: Offer Details -->
                <div class="col-md-6">
                    <h4 class="text-primary mb-3"><i class="fas fa-user-tie me-2"></i>مشخصات پیشنهاد</h4>
                    <p>
                        <strong>وضعیت:</strong>
                        <span class="badge @GetStatusBadgeClass(Model.Status) fs-6">
                            @Model.Status.ToFarsiStatus()
                        </span>
                    </p>
                    <p><strong>توضیحات: </strong> @Model.Description</p>
                    <p><strong>تاریخ ایجاد: </strong> @Model.CreatedAt.ToPersianString()</p>
                </div>

                <!-- Right Column: Service & Client Details -->
                <div class="col-md-6">
                    <h4 class="text-primary mb-3"><i class="fas fa-info-circle me-2"></i>مشخصات سرویس</h4>
                    <p><strong>عنوان سرویس:</strong> @Model.ServiceRequest.Service.Title</p>
                    <p><strong>توضیحات سرویس:</strong> @Model.ServiceRequest.Service.Description</p>
                    <hr />
                    <h4 class="text-primary mb-3"><i class="fas fa-user me-2"></i>مشخصات مشتری</h4>
                    <p><strong>نام مشتری:</strong> @Model.ServiceRequest.Client.FullName</p>
                </div>
            </div>
        </div>

        <!-- Card Footer -->
        <div class="card-footer bg-light text-center py-3">
            <a asp-action="Index" class="btn btn-secondary px-4">بازگشت به لیست</a>
        </div>
    </div>
</div>

<style>
    
    .offer-detail-card {
        border: none;
        border-radius: 15px;
        overflow: hidden;
    }

    .card-header.bg-gradient {
        background: linear-gradient(45deg, #007bff, #00aaff);
    }

    .card-header, .card-footer {
        font-weight: bold;
    }

    .card-body {
        font-size: 1rem;
        padding: 30px;
    }

    
    .carousel-img {
        height: 300px;
        object-fit: cover;
        border-radius: 10px;
    }

    /* Headings & Text */
    h4 {
        margin-bottom: 15px;
    }

    p {
        margin-bottom: 10px;
    }

    strong {
        color: #333;
    }


    .badge {
        font-size: 0.9rem;
        padding: 8px 12px;
        border-radius: 20px;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }
</style>

@functions {
    string GetStatusBadgeClass(StatusEnum status)
    {
        return status switch
        {
            StatusEnum.AwaitingOffers => "bg-secondary",
            StatusEnum.PendingClientConfirmation => "bg-warning",
            StatusEnum.PendingProviderConfirmation => "bg-info",
            StatusEnum.InProgress => "bg-primary",
            StatusEnum.Completed => "bg-success",
            StatusEnum.AwaitingPayment => "bg-dark",
            StatusEnum.Paid => "bg-success",
            StatusEnum.Cancelled => "bg-danger",
            _ => "bg-light text-dark"
        };
    }
}
